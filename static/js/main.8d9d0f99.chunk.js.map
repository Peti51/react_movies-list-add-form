{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","onChange","onDisabledChange","touchedMovies","required","useState","Math","random","toString","slice","id","hasError","setHasError","useEffect","htmlFor","classNames","type","placeholder","event","target","onBlur","length","NewMovie","newMovie","setTouchedMovies","addOn","setNewMovie","valueDelete","isButtonDisabled","count","addMovieComponent","secondValue","key","updatedObjectTitle","trim","addTouchedComponent","componentName","compKey","updatedObjectDescription","onSubmit","preventDefault","disabled","onClick","App","moviesFromServer","setMovies","setIsButtonDisabled","updatedObjectImdbId","ReactDOM","render","document","getElementById"],"mappings":"kvEAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BA5BkC,ECE7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,uBCQpC,IAAMC,EAA6B,SAAC,GAQpC,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MAMI,IALJC,aAKI,MALIF,EAKJ,EAJJG,EAII,EAJJA,SACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,cACAC,EACI,EADJA,SAEA,EAAaC,oBAAS,2BAASP,EAAT,YAZfQ,KAAKC,SAASC,WAAWC,MAAM,GAYhB,IAAfC,EAAP,oBACA,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KAEEvB,EAKEc,EALFd,MACAC,EAIEa,EAJFb,YACAH,EAGEgB,EAHFhB,OACAK,EAEEW,EAFFX,QACAI,EACEO,EADFP,OA0BF,OAXAiB,qBAAU,WAGRD,EAAYT,EAFAL,IAEuCM,IAAaL,EACjE,GAAE,CAACV,EACFC,EACAH,EACAK,EACAI,EACAG,IAGA,sBAAKd,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ6B,QAASJ,EAAlC,SACGV,IAGH,qBAAKf,UAAU,UAAf,SACE,uBACEyB,GAAIA,EACJ,0BAAkBZ,GAClBb,UAAW8B,IAAW,QAAS,CAC7B,YAAaJ,IAEfK,KAAK,OACLC,YAAW,gBAAWjB,GACtBD,MAAOA,EACPE,SAvCkB,SAACiB,GACzBjB,EAASiB,EAAMC,OAAOpB,MAAOD,EAC9B,EAsCOsB,OAAQ,WAnCO,IAAjBrB,EAAMsB,OACRnB,GAAiB,EAAMJ,GAEvBI,GAAiB,EAAOJ,EAkCnB,MAIJa,GACC,mBAAG1B,UAAU,iBAAb,mBAAkCe,EAAlC,oBAIP,EC1EYsB,EAA4B,SAAC,GAQnC,IAPLC,EAOI,EAPJA,SACApB,EAMI,EANJA,cACAqB,EAKI,EALJA,iBACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,YACAC,EACI,EADJA,iBAEA,EAAgBvB,mBAAS,GAAlBwB,EAAP,oBAEExC,EAKEkC,EALFlC,MACAC,EAIEiC,EAJFjC,YACAH,EAGEoC,EAHFpC,OACAK,EAEE+B,EAFF/B,QACAI,EACE2B,EADF3B,OAOIkC,EAAoB,SAACZ,EAAea,GACxC,IAAMC,EAAMD,EACNE,EAAkB,2BAAQV,GAAR,kBAAmBS,EAAMd,EAAMgB,SAEvDR,EAAYO,EACb,EAEKE,EAAsB,SAACjB,EAAgBkB,GAC3C,IAAMC,EAAUD,EACVE,EAAwB,2BAAQnC,GAAR,kBAAwBkC,EAAUnB,IAEhEM,EAAiBc,EAClB,EAED,OACE,uBACErD,UAAU,WAEVsD,SAtBiB,SAACrB,GACpBA,EAAMsB,gBACP,EAiBC,UAKE,oBAAIvD,UAAU,QAAd,yBAIA,cAAC,EAAD,CACEa,KAAK,QACLE,MAAM,QACNI,UAAQ,EACRL,MAAOV,EACPY,SAAU,SAACiB,EAAOa,GAChBD,EAAkBZ,EAAOa,EAC1B,EACD7B,iBAAkB,SAACgB,EAAOkB,GACxBD,EAAoBjB,EAAOkB,EAC5B,EACDjC,cAAeA,IAGjB,cAAC,EAAD,CACEL,KAAK,cACLE,MAAM,cACNI,UAAQ,EACRL,MAAOT,EACPW,SAAU,SAACiB,EAAOa,GAChBD,EAAkBZ,EAAOa,EAC1B,EACD7B,iBAAkB,SAACgB,EAAOkB,GACxBD,EAAoBjB,EAAOkB,EAC5B,EACDjC,cAAeA,IAGjB,cAAC,EAAD,CACEL,KAAK,SACLE,MAAM,YACNI,UAAQ,EACRL,MAAOZ,EACPc,SAAU,SAACiB,EAAOa,GAChBD,EAAkBZ,EAAOa,EAC1B,EACD7B,iBAAkB,SAACgB,EAAOkB,GACxBD,EAAoBjB,EAAOkB,EAC5B,EACDjC,cAAeA,IAGjB,cAAC,EAAD,CACEL,KAAK,UACLE,MAAM,WACNI,UAAQ,EACRL,MAAOP,EACPS,SAAU,SAACiB,EAAOa,GAChBD,EAAkBZ,EAAOa,EAC1B,EACD7B,iBAAkB,SAACgB,EAAOkB,GACxBD,EAAoBjB,EAAOkB,EAC5B,EACDjC,cAAeA,IAGjB,cAAC,EAAD,CACEL,KAAK,SACLE,MAAM,UACNI,UAAQ,EACRL,MAAOH,EACPK,SAAU,SAACiB,EAAOa,GAChBD,EAAkBZ,EAAOa,EAC1B,EACD7B,iBAAkB,SAACgB,EAAOkB,GACxBD,EAAoBjB,EAAOkB,EAC5B,EACDjC,cAAeA,IAGjB,qBAAKlB,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACEwD,SAAUb,EACVZ,KAAK,SACL,UAAQ,gBACR/B,UAAU,iBACVyD,QAAS,WACPjB,IACAE,GACD,EARH,uBA/ECE,EA+FV,E,QC7IYc,EAAM,WACjB,MAA4BtC,mBAASuC,GAArC,mBAAOlD,EAAP,KAAemD,EAAf,KACA,EAAgDxC,oBAAS,GAAzD,mBAAOuB,EAAP,KAAyBkB,EAAzB,KACA,EAA0CzC,mBACxC,CACEhB,OAAO,EACPC,aAAa,EACbH,QAAQ,EACRK,SAAS,EACTI,QAAQ,IANZ,mBAAOO,EAAP,KAAsBqB,EAAtB,KASA,EAAgCnB,mBAAS,CACvChB,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,KALV,mBAAO2B,EAAP,KAAiBG,EAAjB,KAQErC,EAKEkC,EALFlC,MACAC,EAIEiC,EAJFjC,YACAH,EAGEoC,EAHFpC,OACAK,EAEE+B,EAFF/B,QACAI,EACE2B,EADF3B,OA8DF,OA1BAiB,qBAAU,WACJxB,EAAMgC,QACL/B,EAAY+B,QACZlC,EAAOkC,QACP7B,EAAQ6B,QACRzB,EAAOyB,QACVyB,GAAoB,GAGlB3C,EAAcd,OACbc,EAAcb,aACda,EAAchB,QACdgB,EAAcP,QACdO,EAAcX,SACjBsD,GAAoB,EAEvB,GAAE,CAACzD,EACFF,EACAK,EACAI,EACAO,EAAcd,MACdc,EAAcb,YACda,EAAchB,OACdgB,EAAcP,OACdO,EAAcX,UAGd,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAEtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEsC,SAAUA,EACVG,YAAaA,EACbE,iBAAkBA,EAClBzB,cAAeA,EACfqB,iBAAkBA,EAClBC,MAvEM,WACZ,GAAKpC,EAAMgC,QACL/B,EAAY+B,QACZlC,EAAOkC,QACP7B,EAAQ6B,QACRzB,EAAOyB,OAcXwB,EAAU,GAAD,mBAAKnD,GAAL,CAAa6B,SAdH,CACnBuB,GAAoB,GAEpB,IAAMC,EAAmB,2BACpBxB,GADoB,IAEvBlC,OAAO,EACPC,aAAa,EACbM,QAAQ,EACRT,QAAQ,EACRK,SAAS,IAGXgC,EAAiBuB,EAClB,CAGF,EAmDOpB,YAjDY,WAClBD,EAAY,CACVrC,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,IAEX,QA8CF,EC3GDoD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.8d9d0f99.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport { IsMovie } from '../../types/Movie';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  onChange: (newValue: string, secondValue: string) => void,\n  onDisabledChange: (newValue: boolean, secondValue: string) => void,\n  touchedMovies: IsMovie,\n  required: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  onChange,\n  onDisabledChange,\n  touchedMovies,\n  required,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [hasError, setHasError] = useState(false);\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = touchedMovies;\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value, name);\n  };\n\n  const onBlur = () => {\n    if (value.length === 0) {\n      onDisabledChange(true, name);\n    } else {\n      onDisabledChange(false, name);\n    }\n  };\n\n  useEffect(() => {\n    const key = name;\n\n    setHasError(touchedMovies[key as keyof IsMovie] && required && !value);\n  }, [title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n    value]);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={handleInputChange}\n          onBlur={() => {\n            onBlur();\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState, FormEvent } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie, IsMovie } from '../../types/Movie';\n\ninterface Props {\n  newMovie: Movie,\n  touchedMovies: IsMovie,\n  setNewMovie: (newValue: Movie) => void,\n  setTouchedMovies: (newValue: IsMovie) => void,\n  valueDelete: () => void,\n  addOn: () => void,\n  isButtonDisabled: boolean,\n}\n\nexport const NewMovie: React.FC<Props> = ({\n  newMovie,\n  touchedMovies,\n  setTouchedMovies,\n  addOn,\n  setNewMovie,\n  valueDelete,\n  isButtonDisabled,\n}) => {\n  const [count] = useState(0);\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = newMovie;\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n  };\n\n  const addMovieComponent = (event: string, secondValue: string) => {\n    const key = secondValue;\n    const updatedObjectTitle = { ...newMovie, [key]: event.trim() };\n\n    setNewMovie(updatedObjectTitle);\n  };\n\n  const addTouchedComponent = (event: boolean, componentName: string) => {\n    const compKey = componentName;\n    const updatedObjectDescription = { ...touchedMovies, [compKey]: event };\n\n    setTouchedMovies(updatedObjectDescription);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      {}\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        required\n        value={title}\n        onChange={(event, secondValue) => {\n          addMovieComponent(event, secondValue);\n        }}\n        onDisabledChange={(event, componentName) => {\n          addTouchedComponent(event, componentName);\n        }}\n        touchedMovies={touchedMovies}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        required\n        value={description}\n        onChange={(event, secondValue) => {\n          addMovieComponent(event, secondValue);\n        }}\n        onDisabledChange={(event, componentName) => {\n          addTouchedComponent(event, componentName);\n        }}\n        touchedMovies={touchedMovies}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        required\n        value={imgUrl}\n        onChange={(event, secondValue) => {\n          addMovieComponent(event, secondValue);\n        }}\n        onDisabledChange={(event, componentName) => {\n          addTouchedComponent(event, componentName);\n        }}\n        touchedMovies={touchedMovies}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        required\n        value={imdbUrl}\n        onChange={(event, secondValue) => {\n          addMovieComponent(event, secondValue);\n        }}\n        onDisabledChange={(event, componentName) => {\n          addTouchedComponent(event, componentName);\n        }}\n        touchedMovies={touchedMovies}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        required\n        value={imdbId}\n        onChange={(event, secondValue) => {\n          addMovieComponent(event, secondValue);\n        }}\n        onDisabledChange={(event, componentName) => {\n          addTouchedComponent(event, componentName);\n        }}\n        touchedMovies={touchedMovies}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            disabled={isButtonDisabled}\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={() => {\n              addOn();\n              valueDelete();\n            }}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useEffect, useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { IsMovie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [touchedMovies, setTouchedMovies] = useState<IsMovie>(\n    {\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  );\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = newMovie;\n\n  const addOn = () => {\n    if (!title.length\n      && !description.length\n      && !imgUrl.length\n      && !imdbUrl.length\n      && !imdbId.length) {\n      setIsButtonDisabled(true);\n\n      const updatedObjectImdbId = {\n        ...newMovie,\n        title: true,\n        description: true,\n        imdbId: true,\n        imgUrl: true,\n        imdbUrl: true,\n      };\n\n      setTouchedMovies(updatedObjectImdbId);\n    } else {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  const valueDelete = () => {\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  useEffect(() => {\n    if (title.length\n      && description.length\n      && imgUrl.length\n      && imdbUrl.length\n      && imdbId.length) {\n      setIsButtonDisabled(false);\n    }\n\n    if (touchedMovies.title\n      && touchedMovies.description\n      && touchedMovies.imgUrl\n      && touchedMovies.imdbId\n      && touchedMovies.imdbUrl) {\n      setIsButtonDisabled(true);\n    }\n  }, [title,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n    touchedMovies.title,\n    touchedMovies.description,\n    touchedMovies.imgUrl,\n    touchedMovies.imdbId,\n    touchedMovies.imdbUrl]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          newMovie={newMovie}\n          setNewMovie={setNewMovie}\n          isButtonDisabled={isButtonDisabled}\n          touchedMovies={touchedMovies}\n          setTouchedMovies={setTouchedMovies}\n          addOn={addOn}\n          valueDelete={valueDelete}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}