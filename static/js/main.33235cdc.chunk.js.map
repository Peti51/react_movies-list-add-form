{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","touchedName","touchedImgUrl","touchedImdbUrl","touchedImdbId","setTitle","setIsDisabled","setDescription","setImgUrl","setImdbUrl","setimdbId","setTouchedName","setTouchedImgUrl","setTouchedImdbId","setTouchedImdbUrl","useState","Math","random","toString","slice","id","hasError","setHasError","useEffect","length","htmlFor","classNames","type","placeholder","onChange","event","target","onBlur","blurring","NewMovie","isDisabled","addOn","count","onSubmit","preventDefault","disabled","onClick","App","moviesFromServer","setTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33235cdc.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  touchedName: boolean,\n  touchedImgUrl: boolean,\n  touchedImdbUrl: boolean,\n  touchedImdbId: boolean,\n  setTitle: (newValue: string) => void,\n  setDescription: (newValue: string) => void,\n  setImgUrl: (newValue: string) => void,\n  setImdbUrl: (newValue: string) => void,\n  setimdbId: (newValue: string) => void,\n  setIsDisabled: (newValue: boolean) => void,\n  setTouchedName: (newValue: boolean) => void,\n  setTouchedImgUrl: (newValue: boolean) => void,\n  setTouchedImdbId: (newValue: boolean) => void,\n  setTouchedImdbUrl: (newValue: boolean) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  touchedName,\n  touchedImgUrl,\n  touchedImdbUrl,\n  touchedImdbId,\n  setTitle,\n  setIsDisabled,\n  setDescription,\n  setImgUrl,\n  setImdbUrl,\n  setimdbId,\n  setTouchedName,\n  setTouchedImgUrl,\n  setTouchedImdbId,\n  setTouchedImdbUrl,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [hasError, setHasError] = useState(touchedName && required && !value);\n\n  const onChange = (event: string) => {\n    if (name === 'title') {\n      setTitle(event);\n    } else if (name === 'description') {\n      setDescription(event);\n    } else if (name === 'imgUrl') {\n      setImgUrl(event);\n    } else if (name === 'imdbUrl') {\n      setImdbUrl(event);\n    } else if (name === 'imdbId') {\n      setimdbId(event);\n    }\n  };\n\n  const blurring = () => {\n    switch (name) {\n      case 'title':\n        setTouchedName(true);\n        break;\n      case 'imgUrl':\n        setTouchedImgUrl(true);\n        break;\n      case 'imdbUrl':\n        setTouchedImdbUrl(true);\n        break;\n      case 'imdbId':\n        setTouchedImdbId(true);\n        break;\n      default:\n        setTouchedName(true);\n    }\n  };\n\n  useEffect(() => {\n    switch (name) {\n      case 'title':\n        setHasError(touchedName && required && !value);\n        break;\n      case 'imgUrl':\n        setHasError(touchedImgUrl && required && !value);\n        break;\n      case 'imdbUrl':\n        setHasError(touchedImdbUrl && required && !value);\n        break;\n      case 'imdbId':\n        setHasError(touchedImdbId && required && !value);\n        break;\n      default:\n        setHasError(touchedName && required && !value);\n    }\n\n    if (value.length > 0 && name === 'title') {\n      setTouchedName(false);\n    } else if (value.length > 0 && name === 'imgUrl') {\n      setTouchedImgUrl(false);\n    } else if (value.length > 0 && name === 'imdbUrl') {\n      setTouchedImdbUrl(false);\n    } else if (value.length > 0 && name === 'imdbId') {\n      setTouchedImdbId(false);\n    }\n\n    if (!touchedName\n      && !touchedImgUrl\n      && !touchedImdbUrl\n      && !touchedImdbId) {\n      setIsDisabled(false);\n    }\n  }, [touchedName,\n    touchedImgUrl,\n    touchedImdbUrl,\n    touchedImdbId,\n    value]);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => {\n            onChange(event.target.value);\n          }}\n          onBlur={() => {\n            blurring();\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState, FormEvent } from 'react';\nimport { TextField } from '../TextField';\n\ninterface Props {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  isDisabled: boolean,\n  touchedName: boolean,\n  touchedImgUrl: boolean,\n  touchedImdbUrl: boolean,\n  touchedImdbId: boolean,\n  setTitle: (newValue: string) => void,\n  setDescription: (newValue: string) => void,\n  setImgUrl: (newValue: string) => void,\n  setImdbUrl: (newValue: string) => void,\n  setimdbId: (newValue: string) => void,\n  addOn: () => void,\n  setIsDisabled: (newValue: boolean) => void,\n  setTouchedName: (newValue: boolean) => void,\n  setTouchedImgUrl: (newValue: boolean) => void,\n  setTouchedImdbUrl: (newValue: boolean) => void,\n  setTouchedImdbId: (newValue: boolean) => void,\n}\n\nexport const NewMovie: React.FC<Props> = ({\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n  imdbId,\n  isDisabled,\n  touchedName,\n  touchedImgUrl,\n  touchedImdbUrl,\n  touchedImdbId,\n  setTouchedImgUrl,\n  setTouchedImdbUrl,\n  setTouchedImdbId,\n  setTouchedName,\n  setIsDisabled,\n  setTitle,\n  setDescription,\n  setImgUrl,\n  setImdbUrl,\n  setimdbId,\n  addOn,\n}) => {\n  const [count] = useState(0);\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      {}\n\n      <TextField\n        name=\"title\"\n        label=\"title\"\n        value={title}\n        required\n        setTitle={setTitle}\n        setDescription={setDescription}\n        setImgUrl={setImgUrl}\n        setImdbUrl={setImdbUrl}\n        setimdbId={setimdbId}\n        setIsDisabled={setIsDisabled}\n        setTouchedName={setTouchedName}\n        setTouchedImgUrl={setTouchedImgUrl}\n        setTouchedImdbId={setTouchedImdbId}\n        setTouchedImdbUrl={setTouchedImdbUrl}\n        touchedName={touchedName}\n        touchedImgUrl={touchedImgUrl}\n        touchedImdbUrl={touchedImdbUrl}\n        touchedImdbId={touchedImdbId}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        setDescription={setDescription}\n        setTitle={setTitle}\n        setImgUrl={setImgUrl}\n        setImdbUrl={setImdbUrl}\n        setimdbId={setimdbId}\n        setIsDisabled={setIsDisabled}\n        setTouchedName={setTouchedName}\n        setTouchedImgUrl={setTouchedImgUrl}\n        setTouchedImdbUrl={setTouchedImdbUrl}\n        setTouchedImdbId={setTouchedImdbId}\n        touchedName={touchedName}\n        touchedImgUrl={touchedImgUrl}\n        touchedImdbUrl={touchedImdbUrl}\n        touchedImdbId={touchedImdbId}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        required\n        setImgUrl={setImgUrl}\n        setTitle={setTitle}\n        setDescription={setDescription}\n        setImdbUrl={setImdbUrl}\n        setimdbId={setimdbId}\n        setIsDisabled={setIsDisabled}\n        setTouchedName={setTouchedName}\n        setTouchedImgUrl={setTouchedImgUrl}\n        setTouchedImdbUrl={setTouchedImdbUrl}\n        setTouchedImdbId={setTouchedImdbId}\n        touchedName={touchedName}\n        touchedImgUrl={touchedImgUrl}\n        touchedImdbUrl={touchedImdbUrl}\n        touchedImdbId={touchedImdbId}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        required\n        setImdbUrl={setImdbUrl}\n        setTitle={setTitle}\n        setDescription={setDescription}\n        setImgUrl={setImgUrl}\n        setimdbId={setimdbId}\n        setIsDisabled={setIsDisabled}\n        setTouchedName={setTouchedName}\n        setTouchedImgUrl={setTouchedImgUrl}\n        setTouchedImdbId={setTouchedImdbId}\n        setTouchedImdbUrl={setTouchedImdbUrl}\n        touchedName={touchedName}\n        touchedImgUrl={touchedImgUrl}\n        touchedImdbUrl={touchedImdbUrl}\n        touchedImdbId={touchedImdbId}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        setimdbId={setimdbId}\n        required\n        setTitle={setTitle}\n        setDescription={setDescription}\n        setImgUrl={setImgUrl}\n        setImdbUrl={setImdbUrl}\n        setIsDisabled={setIsDisabled}\n        setTouchedName={setTouchedName}\n        setTouchedImgUrl={setTouchedImgUrl}\n        setTouchedImdbUrl={setTouchedImdbUrl}\n        setTouchedImdbId={setTouchedImdbId}\n        touchedName={touchedName}\n        touchedImgUrl={touchedImgUrl}\n        touchedImdbUrl={touchedImdbUrl}\n        touchedImdbId={touchedImdbId}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            disabled={isDisabled}\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={() => addOn()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setimdbId] = useState('');\n  const [movies, setTodos] = useState(moviesFromServer);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [touchedName, setTouchedName] = useState(false);\n  const [touchedImgUrl, setTouchedImgUrl] = useState(false);\n  const [touchedImdbUrl, setTouchedImdbUrl] = useState(false);\n  const [touchedImdbId, setTouchedImdbId] = useState(false);\n\n  const movie = {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n\n  const addOn = () => {\n    if (title !== ''\n      && imdbId !== ''\n      && imgUrl !== ''\n      && imdbUrl !== '') {\n      setTodos([...movies, movie]);\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setimdbId('');\n    } else {\n      setIsDisabled(true);\n      setTouchedName(true);\n      setTouchedImgUrl(true);\n      setTouchedImdbUrl(true);\n      setTouchedImdbId(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          title={title}\n          setTitle={setTitle}\n          description={description}\n          setDescription={setDescription}\n          imgUrl={imgUrl}\n          setImgUrl={setImgUrl}\n          imdbUrl={imdbUrl}\n          setImdbUrl={setImdbUrl}\n          imdbId={imdbId}\n          setimdbId={setimdbId}\n          addOn={addOn}\n          isDisabled={isDisabled}\n          setIsDisabled={setIsDisabled}\n          touchedName={touchedName}\n          setTouchedName={setTouchedName}\n          touchedImgUrl={touchedImgUrl}\n          touchedImdbUrl={touchedImdbUrl}\n          touchedImdbId={touchedImdbId}\n          setTouchedImgUrl={setTouchedImgUrl}\n          setTouchedImdbUrl={setTouchedImdbUrl}\n          setTouchedImdbId={setTouchedImdbId}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}